service: image-metadata-extractor

provider:
  name: aws
  runtime: nodejs18.x
  region: us-east-1
  tracing:
    lambda: true
    apiGateway: true
  environment:
    SNS_TOPIC_ARN: { Ref: ImageUploadedTopic }
  iamRoleStatements:
    - Effect: Allow
      Action:
        - sns:Publish
      Resource: "*"
    - Effect: Allow
      Action:
        - sqs:*
      Resource: "*"
    - Effect: Allow
      Action:
        - s3:*
      Resource: "*"
    - Effect: Allow
      Action:
        - xray:PutTraceSegments
        - xray:PutTelemetryRecords
      Resource: "*"

plugins:
  - serverless-plugin-tracing

functions:
  uploadHandler:
    handler: functions/uploadHandler/index.handler
    events:
      - s3:
          bucket: image-upload-bucket
          event: s3:ObjectCreated:*

  processor:
    handler: functions/processor/index.handler
    events:
      - sqs:
          arn:
            Fn::GetAtt: [ImageQueue, Arn]

resources:
  Resources:
    ImageUploadedTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: image-uploaded-topic

    ImageQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: image-processing-queue

    QueueSubscription:
      Type: AWS::SNS::Subscription
      Properties:
        TopicArn: { Ref: ImageUploadedTopic }
        Protocol: sqs
        Endpoint:
          Fn::GetAtt: [ImageQueue, Arn]

    PermissionToAllowSNS:
      Type: AWS::SQS::QueuePolicy
      Properties:
        Queues:
          - Ref: ImageQueue
        PolicyDocument:
          Statement:
            - Effect: Allow
              Principal: "*"
              Action: "SQS:SendMessage"
              Resource: { "Fn::GetAtt": ["ImageQueue", "Arn"] }
              Condition:
                ArnEquals:
                  aws:SourceArn: { Ref: ImageUploadedTopic }

    ImageBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: image-upload-bucket
